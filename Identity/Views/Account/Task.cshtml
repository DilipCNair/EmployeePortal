@model TaskViewModel

@{
    ViewData["Title"] = "Tasks";
}

<div class="col-12 d-flex justify-content-start align-items-center">
    <header>
        <h4 class="mt-2" style="margin-left:13px;color:grey;font-weight:400">Task - @Model.Name (@Model.Id)</h4>
    </header>
</div>

<div class="container mt-4">
    <!-- Tabs navigation -->
    <ul class="nav" id="myTab" role="tablist" style="margin-left:-15px">
        <li class="nav-item me-5">
            <a class="nav-link @(Model.DetailsSelected ? "active" : "")" style="font-size:18px" 
               id="tab1-link" data-bs-toggle="tab" href="#tab1" role="tab" aria-controls="tab1" 
               aria-selected="@Model.DetailsSelected.ToString().ToLower()">
                Details
            </a>
        </li>
        <li class="nav-item me-5">
            <a class="nav-link @(Model.NotesSelected ? "active" : "")" id="tab2-link" 
               style="font-size:18px;" data-bs-toggle="tab" href="#tab2" role="tab" 
               aria-controls="tab2" aria-selected="@Model.NotesSelected.ToString().ToLower()">
                Notes
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link @(Model.DocumentsSelected ? "active" : "")" id="tab3-link" 
               style="font-size:18px" data-bs-toggle="tab" href="#tab3"role="tab" aria-controls="tab3" 
               aria-selected="@Model.DocumentsSelected.ToString().ToLower()">
                Documents
            </a>
        </li>
    </ul>

    
    <!-- Tabs content -->
    <div class="tab-content mt-2">
        <div class="tab-pane fade @(Model.DetailsSelected ? "show active" : "") " id="tab1" 
             role="tabpanel" aria-labelledby="tab1-link">
            <hr />
            <partial name="TaskDetails" model="Model" />
            <hr />
        </div>
        <div class="tab-pane fade @(Model.NotesSelected ? "show active" : "")" id="tab2" 
             role="tabpanel" aria-labelledby="tab2-link">
            <partial name="TaskNoteView" model="Model" />
        </div>
        <div class="tab-pane fade @(Model.DocumentsSelected ? "show active" : "")" id="tab3" 
             role="tabpanel" aria-labelledby="tab3-link">
            <partial name="TaskDocumentView" model="Model" />
        </div>
    </div>
</div>

<div class="text-center mt-5">
    <a class="link-offset-2 link-underline link-underline-opacity-0"
       asp-controller="Account" asp-action="Tasks">
        <i class="fi fi-sr-arrow-left"
           style="vertical-align:middle;margin-right:3px"></i> Back to Tasks
    </a>
</div>

<style>
    .nav-link {
        color: grey; /* Default color */
    }

    .nav-link.active {
        color: #0d6efd !important; /* Selected (active) tab color */
    }
</style>


@section Scripts {
    <script type="text/javascript">

        $(document).ready(function () {
            
            $('#editUpdateBtn').on('click', function (e) {
                e.preventDefault();

                // Get the current button text
                var btnText = $(this).text();

                if (btnText === 'Edit') {
                    // Enable the select field and change button text to 'Update'
                    $('#TaskStatus').prop('disabled', false);
                    $(this).text('Update');
                } else if (btnText === 'Update') {
                    // Send the AJAX request
                    var taskId = $('#Id').val(); // Assuming there's an element with ID for taskId
                    var taskStatus = $('#TaskStatus').val();

                    $.ajax({
                        url: '/Account/UpdateStatus', // Replace with your controller/action URL
                        type: 'POST',
                        data: {
                            taskId: taskId,
                            status: taskStatus
                        },
                        success: function (response) {
                            if (response.success) {
                                alert(response.message);
                                window.location.href = '/Account/Tasks'; // Reload the page upon success
                            } else {
                                // alert('Task status updated');
                                window.location.href = '/Account/Tasks'; // Reload the page upon success
                            }
                        },
                        error: function () {
                            alert('An error occurred while updating the task.');
                        }
                    });
                }
            });

            $('.DeleteDocument').on('click', function (e) {
                e.preventDefault(); // Prevent the default button click behavior

                // Show a confirmation dialog
                if (confirm("Are you sure you want to delete this document?")) {
                    // Submit the form
                    $(this).closest('form').submit();
                }
            });

            $('#noteForm').on('submit', function (e) {
                // Add data-bs-dismiss attribute before submission
                $('#submitBtn').attr('data-bs-dismiss', 'modal');

                // Optionally, you can add any other custom logic here

                // Submit the form
                // The form will automatically submit unless you prevent the default behavior
            });

            $('.remove-experience').on('click', function (e) {
                var confirmed = confirm('Are you sure you want to delete this note?');
                if (!confirmed) {
                    e.preventDefault(); // Prevent form submission if not confirmed
                }
            });
        });    
    </script>
}






