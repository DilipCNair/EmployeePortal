@model ProfileViewModel

@{
    ViewData["Title"] = "Details";
}

<br/>
<div class="col-12 d-flex">
    <header>
        <h2 class="display-6" style="font-size:30px;font-weight:300">Add relevant details</h2>
    </header>
</div>
<hr />

<form id="SummaryForm" asp-action="Summary" method="post">
    <div class="container mt-5">
        <div class="row mb-2">
            <label for="Summary" class="col-sm-2 col-form-label">Summary  :</label>
            <div class="col-sm-9">
                <div style="position: relative;">
                    <textarea style="height:180px;resize:none;color:grey" class="form-control" 
                        id="Summary" maxlength="750" asp-for="Summary" disabled>@Model.Summary
                    </textarea>
                </div>
            </div>
        </div>
        <div class="row mb-4">
            <div class="col-sm-4 offset-sm-2">
                <button type="button" class="btn btn-link" style="text-decoration:none;margin-left:-12px" id="editButton" >Edit</button>
                <button type="submit" class="btn btn-link" style="text-decoration:none;display:none" id="updateButton">Update</button>
            </div>
        </div>
    </div>
</form>
<hr/>

<h3 class="display-6" style="font-size:30px;font-weight:300">Add Experience</h3>

<br/><br/>
<form asp-action="Experience" method="post" class="form-horizontal" id="ExperienceForm">
    <div class="form-group row">
        <label asp-for="Experience.Title" class="col-sm-2 col-form-label">Title :</label>
        <div class="col-sm-4 mb-4">
            <input asp-for="Experience.Title" class="form-control" />
            <span asp-validation-for="Experience.Title" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row">
        <label asp-for="Experience.StartDate" class="col-sm-2 col-form-label">Start Date :</label>
        <div class="col-sm-2 mb-4">
            <input type="date" asp-for="Experience.StartDate" class="form-control" />
            <span asp-validation-for="Experience.StartDate" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row">
        <label asp-for="Experience.EndDate" class="col-sm-2 col-form-label">End Date :</label>
        <div class="col-sm-2 mb-4">
            <input type="date" asp-for="Experience.EndDate" id="EndDate" class="form-control" />
            <span asp-validation-for="Experience.EndDate" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row">
        <label asp-for="Experience.PresentlyWorking" class="col-sm-2 col-form-label">Presently Working :</label>
        <div class="col-sm-4 mb-4 mt-2">
            <input asp-for="Experience.PresentlyWorking" id="PresentlyWorking" class="form-check-input" type="checkbox" />
            <span asp-validation-for="Experience.PresentlyWorking" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row">
        <label asp-for="Experience.Description" class="col-sm-2 col-form-label">Description :</label>
        <div class="col-sm-4 mb-4">
            <textarea asp-for="Experience.Description" style="height:200px;resize:none" class="form-control"></textarea>
            <span asp-validation-for="Experience.Description" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-4 mb-4 offset-sm-2">
            <button type="submit" class="btn btn-dark rounded-pill" style="width:100px">Add</button>
        </div>
    </div>
</form>
<br/><hr/>


@section Scripts
{
    <script>
        $(document).ready(function () {
            $('#editButton').click(function () {
                var isEdit = $(this).text() === 'Edit';

                // Toggle the textarea's disabled attribute
                $('#Summary').prop('disabled', !isEdit);

                // Toggle the visibility of the update button
                $('#updateButton').toggle(isEdit);

                // Change button text to Cancel if currently Edit, otherwise change it to Edit
                $(this).text(isEdit ? 'Cancel' : 'Edit');

                // If changing to Edit (Cancel was clicked), reload the page to reset the form
                if (!isEdit) {
                    location.reload();
                }
            });
        });

        $(document).ready(function () {
            function toggleEndDate() {
                if ($('#PresentlyWorking').is(':checked')) {
                    $('#EndDate').prop('disabled', true).val('');
                } else {
                    $('#EndDate').prop('disabled', false);
                }
            }

            // Initialize the state on page load
            toggleEndDate();

            // Add change event listener to the checkbox
            $('#PresentlyWorking').change(function () {
                toggleEndDate();
            });
        });

        // $(document).ready(function () {
        //     $('#experienceForm').submit(function (event) {
        //         // Prevent form submission
        //         event.preventDefault();

        //         // Validate required fields
        //         var isValid = true;
        //         var title = $('[asp-for="Experience.Title"]').val().trim();
        //         var startDate = $('[asp-for="Experience.StartDate"]').val().trim();
        //         var description = $('[asp-for="Experience.Description"]').val().trim();
        //         var presentlyWorking = $('#PresentlyWorking').is(':checked');
        //         var endDate = $('[asp-for="Experience.EndDate"]').val().trim();

        //         if (!title) {
        //             isValid = false;
        //             $('[asp-validation-for="Experience.Title"]').text('Title is required.');
        //         } else {
        //             $('[asp-validation-for="Experience.Title"]').text('');
        //         }

        //         if (!startDate) {
        //             isValid = false;
        //             $('[asp-validation-for="Experience.StartDate"]').text('Start Date is required.');
        //         } else {
        //             $('[asp-validation-for="Experience.StartDate"]').text('');
        //         }

        //         if (!description) {
        //             isValid = false;
        //             $('[asp-validation-for="Experience.Description"]').text('Description is required.');
        //         } else {
        //             $('[asp-validation-for="Experience.Description"]').text('');
        //         }

        //         if (!presentlyWorking && !endDate) {
        //             isValid = false;
        //             $('[asp-validation-for="Experience.EndDate"]').text('End Date or Presently Working is required.');
        //         } else {
        //             $('[asp-validation-for="Experience.EndDate"]').text('');
        //         }

        //         // Submit the form if all fields are valid
        //         if (isValid) {
        //             this.submit();
        //         }
        //     });
        // });


    </script>
}
